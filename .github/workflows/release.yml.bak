name: Release
#on:
#  release:
#    types:
#      - created
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  lint:
    name: "Code quality check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: x64
      - name: Checkout submodules
        run: git submodule update --init --recursive --depth=1
      - name: Install nox
        run: pip install nox==2021.10.1
      - name: Install poetry
        run:  |
          python -m ensurepip
          python -m pip install -U pip wheel
          pip install poetry==1.1.11
      - name: Run Quality test
        run: nox -p 3.9
  PyPI-publish:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9']
    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1.0.0
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install nox and poetry
      run: |
        python -m ensurepip
        python -m pip install -U pip
        pip install nox==2021.10.1
        pip install poetry==1.1.11
#    - name: Checkout submodules
#      run: git submodule update --init --recursive --depth=1
#    - run: nox -s tests -p ${{ matrix.python-version }}
    - name: Set version
      run: |
        printf 'Tag version:    %s\n' ${{ steps.tag.outputs.tag }}
        printf 'Branch version: %s\n' $(poetry version --short)
        poetry version ${{ steps.tag.outputs.tag }}
    - name: Build wheel
      run: |
        poetry install --no-dev --no-root
        poetry build -f wheel
    - name: Build sdist
#      run:  python setup-generated.py sdist --formats=gztar,xztar,zip
      run: poetry build -f sdist
      if:   matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
    - name: Publish package for ${{ matrix.os }}, python ${{ matrix.python-version }}
      run:  poetry publish  -u __token__ -p ${{ secrets.PYPI_TOKEN }}
